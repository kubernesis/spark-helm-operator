apiVersion: apachespark.apache.org/v1alpha1
kind: Spark
metadata:
  name: spark-operator
  annotations:
    helm.sdk.operatorframework.io/install-disable-crds: true
spec:
  # Default values copied from <project_dir>/helm-charts/spark-operator/values.yaml
  affinity: {}
  batchScheduler:
    enable: false
  controllerThreads: 10
  fullnameOverride: ""
  image:
    pullPolicy: IfNotPresent
    repository: ghcr.io/googlecloudplatform/spark-operator
    tag: ""
  imagePullSecrets: []
  ingressUrlFormat: ""
  istio:
    enabled: false
  labelSelectorFilter: ""
  leaderElection:
    lockName: spark-operator-lock
    lockNamespace: ""
  logLevel: 2
  metrics:
    enable: true
    endpoint: /metrics
    port: 10254
    portName: metrics
    prefix: ""
  nameOverride: ""
  nodeSelector: {}
  podAnnotations: {}
  podLabels: {}
  podMonitor:
    enable: false
    jobLabel: spark-operator-podmonitor
    labels: {}
    podMetricsEndpoint:
      interval: 5s
      scheme: http
  podSecurityContext: {}
  rbac:
    create: false
    createClusterRole: true
    createRole: true
  replicaCount: 1
  resourceQuotaEnforcement:
    enable: false
  resources: {}
  resyncInterval: 30
  securityContext: {}
  serviceAccounts:
    spark:
      annotations: {}
      create: true
      name: ""
    sparkoperator:
      annotations: {}
      create: true
      name: ""
  sparkJobNamespace: ""
  tolerations: []
  uiService:
    enable: true
  volumeMounts: []
  volumes: []
  webhook:
    cleanupAnnotations:
      helm.sh/hook: pre-delete, pre-upgrade
      helm.sh/hook-delete-policy: hook-succeeded
    enable: false
    initAnnotations:
      helm.sh/hook: pre-install, pre-upgrade
      helm.sh/hook-weight: "50"
    namespaceSelector: ""
    port: 8080
    timeout: 30
  
  
